steps:
  # Build the Quarkus application
  - name: 'gcr.io/cloud-builders/mvn'
    args: ['clean', 'package', '-Dquarkus.package.type=jar']
    dir: 'services'

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'services/src/main/docker/Dockerfile.jvm',
      '-t', 'gcr.io/$PROJECT_ID/corepadel-quarkus:$COMMIT_SHA',
      'services'
    ]

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/corepadel-quarkus:$COMMIT_SHA']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'corepadel-quarkus',
      '--image', 'gcr.io/$PROJECT_ID/corepadel-quarkus:$COMMIT_SHA',
      '--platform', 'managed',
      '--region', 'us-central1',
      '--allow-unauthenticated',
      '--set-env-vars', 'QUARKUS_DATASOURCE_JDBC_URL=${_DATABASE_URL},QUARKUS_DATASOURCE_USERNAME=${_DATABASE_USERNAME},QUARKUS_DATASOURCE_PASSWORD=${_DATABASE_PASSWORD},FIREBASE_PROJECT_ID=$PROJECT_ID,FIREBASE_REGION=us-central1',
      '--port', '8080',
      '--memory', '1Gi',
      '--cpu', '1',
      '--max-instances', '10'
    ]

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/corepadel-quarkus:$COMMIT_SHA'

# Optional: Build the Angular app and deploy to Firebase Hosting
# Uncomment the following steps if you want to include frontend deployment
# - name: 'node:20'
#   entrypoint: npm
#   args: ['ci']
#   dir: 'web/web-app'
#
# - name: 'node:20'
#   entrypoint: npm
#   args: ['run', 'build:prod']
#   dir: 'web/web-app'
#
# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   entrypoint: firebase
#   args: ['deploy', '--only', 'hosting', '--project', '$PROJECT_ID']
